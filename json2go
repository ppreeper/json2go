#!/usr/bin/env python3
import argparse
import json
import sys


def gettype(value: any, buf: str, omit: bool, level: int) -> str:
    typevalue = type(value)
    if typevalue == str:
        return "string"
    elif typevalue == int:
        return "int"
    elif typevalue == float:
        return "float64"
    elif typevalue == bool:
        return "bool"
    elif typevalue == list:
        list_type = ""
        if value:
            list_type = gettype(value[0], buf, omit, level)
        return "[]" + list_type
    elif typevalue == dict:
        struct_text = (
            "struct {\n"
            + itermap(value, buf, omit, level=level + 1)
            + level * buf
            + "}"
        )
        level = level - 1
        return struct_text
    else:
        return ""


def getdef(key: str, value: any, buf: str, omit: bool, level: int) -> str:
    return " ".join(
        [
            key.title().replace("_", ""),
            gettype(value, buf, omit, level),
            f'`json:"{key},omitempty"`' if omit else f'`json:"{key}"`',
        ]
    )


def itermap(data: any, buf: str, omit: bool, level: int) -> str:
    struct_text = ""
    for key, value in data.items():
        struct_text += buf * level + getdef(key, value, buf, omit, level) + "\n"
    return struct_text


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-i",
        "--input",
        help="file: <file.json> or stdin: -",
        type=argparse.FileType("r"),
        default="-",
    )
    parser.add_argument(
        "-n", "--name", help="struct name", action="store", default="AutoGenerated"
    )
    parser.add_argument(
        "-o", "--omit", help="add omitempty", action="store_true", default=False
    )
    args = parser.parse_args()

    if args.input.name == "-":
        # Read from stdin
        json_data = json.load(sys.stdin.read())
    else:
        # Read from a file
        with args.input as f:
            json_data = json.load(f)

    level = 0
    buf = "    "

    struct_text = (
        "type "
        + args.name
        + " struct {\n"
        + itermap(json_data, buf, args.omit, level=level + 1)
        + "}\n"
    )
    print(struct_text)


if __name__ == "__main__":
    main()
